{"ast":null,"code":"var _jsxFileName = \"D:\\\\React.js\\\\React Udemy\\\\Coding Challenges\\\\09-workout-timer\\\\src\\\\Calculator.js\",\n  _s = $RefreshSig$();\nimport { memo, useState, useEffect, useCallback } from \"react\";\nimport clickSound from \"./ClickSound.m4a\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Calculator(_ref) {\n  _s();\n  let {\n    workouts,\n    allowSound\n  } = _ref;\n  const [number, setNumber] = useState(workouts.at(0).numExercises);\n  const [sets, setSets] = useState(3);\n  const [speed, setSpeed] = useState(90);\n  const [durationBreak, setDurationBreak] = useState(5);\n  const [duration, setDuration] = useState(0);\n\n  /* \n    To fix this issue, you should use the useCallback hook to memoize the playSound function. \n    useCallback will return a memoized version of the function that only changes if one of its dependencies has changed. \n    This way, it won't be considered as a new function on every render, and your useEffect won't re-trigger unnecessarily.\n     The concequence to using 'useCallback' is that you need to add 'allowSound' to the dependency array of 'useCallback'.\n    This means that 'playSound' will be re-created every time 'allowSound' changes.\n    This will cause the 'useEffect' to re-trigger every time 'allowSound' changes as the 'playSound' function will be different (in the dependency array of useEffect).\n  */\n  const playSound = useCallback(() => {\n    if (!allowSound) return;\n    const sound = new Audio(clickSound);\n    sound.play();\n  }, [allowSound]); // Dependency array includes allowSound\n\n  useEffect(() => {\n    const newDuration = number * sets * speed / 60 + (sets - 1) * durationBreak;\n    setDuration(newDuration);\n\n    // playSound();\n  }, [number, sets, speed, durationBreak, playSound]);\n  useEffect(() => {}, [duration]);\n\n  // Derived state\n  // const duration = (number * sets * speed) / 60 + (sets - 1) * durationBreak;\n  const mins = Math.floor(duration);\n  const seconds = (duration - mins) * 60;\n  function handleNumberChange(e) {\n    setNumber(+e.target.value);\n  }\n  function handleSetsChange(e) {\n    setSets(+e.target.value);\n  }\n  function handleSpeedChange(e) {\n    setSpeed(+e.target.value);\n  }\n  function handleDurationBreakChange(e) {\n    setDurationBreak(+e.target.value);\n  }\n  function handleIncrement() {\n    setDuration(prevState => Math.floor(prevState) + 1);\n  }\n  function handleDecrement() {\n    setDuration(prevState => prevState > 1 ? Math.ceil(prevState) - 1 : 0);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Type of workout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: number,\n          onChange: handleNumberChange,\n          children: workouts.map(workout => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: workout.numExercises,\n            children: [workout.name, \" (\", workout.numExercises, \" exercises)\"]\n          }, workout.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"How many sets?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"1\",\n          max: \"5\",\n          value: sets,\n          onChange: handleSetsChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: sets\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"How fast are you?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"30\",\n          max: \"180\",\n          step: \"30\",\n          value: speed,\n          onChange: handleSpeedChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [speed, \" sec/exercise\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Break length\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"1\",\n          max: \"10\",\n          value: durationBreak,\n          onChange: handleDurationBreakChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [durationBreak, \" minutes/break\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDecrement,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [mins < 10 && \"0\", mins, \":\", seconds < 10 && \"0\", seconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleIncrement,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n// If it's some children components that are re-rendering, just because the parent component is re-rendering, then the solution is to memoize those components.\n// The memo function only works if the props that are being passed are the same between renders.\n_s(Calculator, \"5dcGLCgkTR95iDNCP8rTh2GUKxA=\");\n_c = Calculator;\nexport default _c2 = /*#__PURE__*/memo(Calculator);\nvar _c, _c2;\n$RefreshReg$(_c, \"Calculator\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["memo","useState","useEffect","useCallback","clickSound","jsxDEV","_jsxDEV","Fragment","_Fragment","Calculator","_ref","_s","workouts","allowSound","number","setNumber","at","numExercises","sets","setSets","speed","setSpeed","durationBreak","setDurationBreak","duration","setDuration","playSound","sound","Audio","play","newDuration","mins","Math","floor","seconds","handleNumberChange","e","target","value","handleSetsChange","handleSpeedChange","handleDurationBreakChange","handleIncrement","prevState","handleDecrement","ceil","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","workout","name","type","min","max","step","onClick","_c","_c2","$RefreshReg$"],"sources":["D:/React.js/React Udemy/Coding Challenges/09-workout-timer/src/Calculator.js"],"sourcesContent":["import { memo, useState, useEffect, useCallback } from \"react\";\nimport clickSound from \"./ClickSound.m4a\";\n\nfunction Calculator({ workouts, allowSound }) {\n  const [number, setNumber] = useState(workouts.at(0).numExercises);\n  const [sets, setSets] = useState(3);\n  const [speed, setSpeed] = useState(90);\n  const [durationBreak, setDurationBreak] = useState(5);\n\n  const [duration, setDuration] = useState(0);\n\n  /* \n    To fix this issue, you should use the useCallback hook to memoize the playSound function. \n    useCallback will return a memoized version of the function that only changes if one of its dependencies has changed. \n    This way, it won't be considered as a new function on every render, and your useEffect won't re-trigger unnecessarily.\n\n    The concequence to using 'useCallback' is that you need to add 'allowSound' to the dependency array of 'useCallback'.\n    This means that 'playSound' will be re-created every time 'allowSound' changes.\n    This will cause the 'useEffect' to re-trigger every time 'allowSound' changes as the 'playSound' function will be different (in the dependency array of useEffect).\n  */\n  const playSound = useCallback(() => {\n    if (!allowSound) return;\n    const sound = new Audio(clickSound);\n    sound.play();\n  }, [allowSound]); // Dependency array includes allowSound\n\n  useEffect(() => {\n    const newDuration =\n      (number * sets * speed) / 60 + (sets - 1) * durationBreak;\n    setDuration(newDuration);\n\n    // playSound();\n  }, [number, sets, speed, durationBreak, playSound]);\n\n  useEffect(() => {}, [duration]);\n\n  // Derived state\n  // const duration = (number * sets * speed) / 60 + (sets - 1) * durationBreak;\n  const mins = Math.floor(duration);\n  const seconds = (duration - mins) * 60;\n\n  function handleNumberChange(e) {\n    setNumber(+e.target.value);\n  }\n\n  function handleSetsChange(e) {\n    setSets(+e.target.value);\n  }\n\n  function handleSpeedChange(e) {\n    setSpeed(+e.target.value);\n  }\n\n  function handleDurationBreakChange(e) {\n    setDurationBreak(+e.target.value);\n  }\n\n  function handleIncrement() {\n    setDuration((prevState) => Math.floor(prevState) + 1);\n  }\n\n  function handleDecrement() {\n    setDuration((prevState) => (prevState > 1 ? Math.ceil(prevState) - 1 : 0));\n  }\n\n  return (\n    <>\n      <form>\n        <div>\n          <label>Type of workout</label>\n          <select value={number} onChange={handleNumberChange}>\n            {workouts.map((workout) => (\n              <option value={workout.numExercises} key={workout.name}>\n                {workout.name} ({workout.numExercises} exercises)\n              </option>\n            ))}\n          </select>\n        </div>\n        <div>\n          <label>How many sets?</label>\n          <input\n            type=\"range\"\n            min=\"1\"\n            max=\"5\"\n            value={sets}\n            onChange={handleSetsChange}\n          />\n          <span>{sets}</span>\n        </div>\n        <div>\n          <label>How fast are you?</label>\n          <input\n            type=\"range\"\n            min=\"30\"\n            max=\"180\"\n            step=\"30\"\n            value={speed}\n            onChange={handleSpeedChange}\n          />\n          <span>{speed} sec/exercise</span>\n        </div>\n        <div>\n          <label>Break length</label>\n          <input\n            type=\"range\"\n            min=\"1\"\n            max=\"10\"\n            value={durationBreak}\n            onChange={handleDurationBreakChange}\n          />\n          <span>{durationBreak} minutes/break</span>\n        </div>\n      </form>\n      <section>\n        <button onClick={handleDecrement}>-</button>\n        <p>\n          {mins < 10 && \"0\"}\n          {mins}:{seconds < 10 && \"0\"}\n          {seconds}\n        </p>\n        <button onClick={handleIncrement}>+</button>\n      </section>\n    </>\n  );\n}\n\n// If it's some children components that are re-rendering, just because the parent component is re-rendering, then the solution is to memoize those components.\n// The memo function only works if the props that are being passed are the same between renders.\nexport default memo(Calculator);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}